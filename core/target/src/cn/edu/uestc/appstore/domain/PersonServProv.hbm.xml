<?xml version="1.0" encoding="UTF-8"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="cn.edu.uestc.appstore.domain.PersonServProvImpl" table="PERSON_SERV_PROV" dynamic-insert="false" dynamic-update="false">
        <id name="id" type="java.lang.Long" unsaved-value="null">
            <column name="ID" sql-type="BIGINT"/>
            <generator class="native">
            </generator>
        </id>
        <property name="username" type="java.lang.String">
            <column name="USERNAME" not-null="true" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="password" type="java.lang.String">
            <column name="PASSWORD" not-null="true" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="email" type="java.lang.String">
            <column name="EMAIL" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="regTime" type="java.util.Date">
            <column name="REG_TIME" not-null="true" unique="false" sql-type="DATETIME"/>
        </property>
        <property name="phone" type="java.lang.String">
            <column name="PHONE" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="address" type="java.lang.String">
            <column name="ADDRESS" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="postCode" type="java.lang.String">
            <column name="POST_CODE" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="cardCode" type="java.lang.String">
            <column name="CARD_CODE" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="bankName" type="java.lang.String">
            <column name="BANK_NAME" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="bankPerson" type="java.lang.String">
            <column name="BANK_PERSON" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="account" type="java.lang.String">
            <column name="ACCOUNT" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="upCount" type="java.lang.Integer">
            <column name="UP_COUNT" not-null="false" unique="false" sql-type="INTEGER"/>
        </property>
        <property name="sucCount" type="java.lang.Integer">
            <column name="SUC_COUNT" not-null="false" unique="false" sql-type="INTEGER"/>
        </property>
        <property name="creditTotal" type="java.lang.Integer">
            <column name="CREDIT_TOTAL" not-null="false" unique="false" sql-type="INTEGER"/>
        </property>
        <many-to-one name="creditDegree" class="cn.edu.uestc.appstore.domain.CreditDegreeImpl" foreign-key="PERSON_SERV_PROV_CREDIT_DEGREC" not-null="true" lazy="proxy" fetch="select">
            <column name="CREDIT_DEGREE_FK" not-null="true" sql-type="BIGINT"/>
        </many-to-one>
        <many-to-one name="userState" class="cn.edu.uestc.appstore.domain.UserStateImpl" foreign-key="PERSON_SERV_PROV_USER_STATE_FC" not-null="true" lazy="proxy" fetch="select">
            <column name="USER_STATE_FK" not-null="true" sql-type="BIGINT"/>
        </many-to-one>
        <many-to-one name="city" class="cn.edu.uestc.appstore.domain.CityImpl" foreign-key="PERSON_SERV_PROV_CITY_FKC" not-null="false" lazy="proxy" fetch="select">
            <column name="CITY_FK" not-null="false" sql-type="BIGINT"/>
        </many-to-one>
        <set name="resouces" order-by="PERSON_SERV_PROV_FK" lazy="true" fetch="select" inverse="true">
            <key foreign-key="RESOUCE_PERSON_SERV_PROV_FKC">
                <column name="PERSON_SERV_PROV_FK" sql-type="BIGINT"/>
            </key>
            <one-to-many class="cn.edu.uestc.appstore.domain.ResouceImpl" not-found="exception"/>
        </set>
        <set name="comQuestions" order-by="PERSON_SERV_PROV_FK" lazy="true" fetch="select" inverse="true">
            <key foreign-key="COM_QUESTION_PERSON_SERV_PROVC">
                <column name="PERSON_SERV_PROV_FK" sql-type="BIGINT"/>
            </key>
            <one-to-many class="cn.edu.uestc.appstore.domain.ComQuestionImpl" not-found="exception"/>
        </set>
    </class>
</hibernate-mapping>