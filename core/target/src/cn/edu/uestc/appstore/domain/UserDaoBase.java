// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringHibernateDaoBase.vsl in andromda-spring-cartridge.
//
package cn.edu.uestc.appstore.domain;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>cn.edu.uestc.appstore.domain.User</code>.
 * </p>
 *
 * @see cn.edu.uestc.appstore.domain.User
 */
public abstract class UserDaoBase
    extends org.springframework.orm.hibernate3.support.HibernateDaoSupport
    implements cn.edu.uestc.appstore.domain.UserDao
{

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#load(int, java.lang.Long)
     */
    public java.lang.Object load(final int transform, final java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "User.load - 'id' can not be null");
        }
        final java.lang.Object entity = this.getHibernateTemplate().get(cn.edu.uestc.appstore.domain.UserImpl.class, id);
        return transformEntity(transform, (cn.edu.uestc.appstore.domain.User)entity);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#load(java.lang.Long)
     */
    public cn.edu.uestc.appstore.domain.User load(java.lang.Long id)
    {
        return (cn.edu.uestc.appstore.domain.User)this.load(TRANSFORM_NONE, id);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#loadAll()
     */
    public java.util.Collection loadAll()
    {
        return this.loadAll(TRANSFORM_NONE);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#loadAll(int)
     */
    public java.util.Collection loadAll(final int transform)
    {
        return this.loadAll(transform, -1, -1);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#loadAll(int, int)
     */
    public java.util.Collection loadAll(final int pageNumber, final int pageSize)
    {
        return this.loadAll(TRANSFORM_NONE, pageNumber, pageSize);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#loadAll(int, int, int)
     */
    public java.util.Collection loadAll(final int transform, final int pageNumber, final int pageSize)
    {
        try
        {
            final org.hibernate.Criteria criteria = this.getSession(false).createCriteria(cn.edu.uestc.appstore.domain.UserImpl.class);
            if (pageNumber > 0 && pageSize > 0)
            {
                criteria.setFirstResult(this.calculateFirstResult(pageNumber, pageSize));
                criteria.setMaxResults(pageSize);
            }
            final java.util.Collection results = criteria.list();
            this.transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    protected int calculateFirstResult(int pageNumber, int pageSize)
    {
        int firstResult = 0;
        if (pageNumber > 0)
        {
            firstResult = (pageNumber - 1) * pageSize;
        }
        return firstResult;
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(cn.edu.uestc.appstore.domain.User)
     */
    public cn.edu.uestc.appstore.domain.User create(cn.edu.uestc.appstore.domain.User user)
    {
        return (cn.edu.uestc.appstore.domain.User)this.create(TRANSFORM_NONE, user);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(int transform, cn.edu.uestc.appstore.domain.User)
     */
    public java.lang.Object create(final int transform, final cn.edu.uestc.appstore.domain.User user)
    {
        if (user == null)
        {
            throw new IllegalArgumentException(
                "User.create - 'user' can not be null");
        }
        this.getHibernateTemplate().save(user);
        return this.transformEntity(transform, user);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(java.util.Collection)
     */
    public java.util.Collection create(final java.util.Collection entities)
    {
        return create(TRANSFORM_NONE, entities);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(int, java.util.Collection)
     */
    public java.util.Collection create(final int transform, final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "User.create - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public java.lang.Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        create(transform, (cn.edu.uestc.appstore.domain.User)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
        return entities;
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Double, java.lang.Boolean, java.util.Date, java.lang.String)
     */
    public cn.edu.uestc.appstore.domain.User create(
        java.lang.String username,
        java.lang.String password,
        java.lang.String realName,
        java.lang.String email,
        java.lang.String phone,
        java.lang.String address,
        java.lang.String description,
        java.lang.String picture,
        java.lang.String question,
        java.lang.String answer,
        java.lang.Double point,
        java.lang.Boolean isActive,
        java.util.Date regTime,
        java.lang.String memo)
    {
        return (cn.edu.uestc.appstore.domain.User)this.create(TRANSFORM_NONE, username, password, realName, email, phone, address, description, picture, question, answer, point, isActive, regTime, memo);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Double, java.lang.Boolean, java.util.Date, java.lang.String)
     */
    public java.lang.Object create(
        final int transform,
        java.lang.String username,
        java.lang.String password,
        java.lang.String realName,
        java.lang.String email,
        java.lang.String phone,
        java.lang.String address,
        java.lang.String description,
        java.lang.String picture,
        java.lang.String question,
        java.lang.String answer,
        java.lang.Double point,
        java.lang.Boolean isActive,
        java.util.Date regTime,
        java.lang.String memo)
    {
        cn.edu.uestc.appstore.domain.User entity = new cn.edu.uestc.appstore.domain.UserImpl();
        entity.setUsername(username);
        entity.setPassword(password);
        entity.setRealName(realName);
        entity.setEmail(email);
        entity.setPhone(phone);
        entity.setAddress(address);
        entity.setDescription(description);
        entity.setPicture(picture);
        entity.setQuestion(question);
        entity.setAnswer(answer);
        entity.setPoint(point);
        entity.setIsActive(isActive);
        entity.setRegTime(regTime);
        entity.setMemo(memo);
        return this.create(transform, entity);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(java.lang.Boolean, java.lang.String, java.lang.Double, java.util.Date, cn.edu.uestc.appstore.domain.Role, java.lang.String)
     */
    public cn.edu.uestc.appstore.domain.User create(
        java.lang.Boolean isActive,
        java.lang.String password,
        java.lang.Double point,
        java.util.Date regTime,
        cn.edu.uestc.appstore.domain.Role role,
        java.lang.String username)
    {
        return (cn.edu.uestc.appstore.domain.User)this.create(TRANSFORM_NONE, isActive, password, point, regTime, role, username);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#create(int, java.lang.Boolean, java.lang.String, java.lang.Double, java.util.Date, cn.edu.uestc.appstore.domain.Role, java.lang.String)
     */
    public java.lang.Object create(
        final int transform,
        java.lang.Boolean isActive,
        java.lang.String password,
        java.lang.Double point,
        java.util.Date regTime,
        cn.edu.uestc.appstore.domain.Role role,
        java.lang.String username)
    {
        cn.edu.uestc.appstore.domain.User entity = new cn.edu.uestc.appstore.domain.UserImpl();
        entity.setIsActive(isActive);
        entity.setPassword(password);
        entity.setPoint(point);
        entity.setRegTime(regTime);
        entity.setRole(role);
        entity.setUsername(username);
        return this.create(transform, entity);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#update(cn.edu.uestc.appstore.domain.User)
     */
    public void update(cn.edu.uestc.appstore.domain.User user)
    {
        if (user == null)
        {
            throw new IllegalArgumentException(
                "User.update - 'user' can not be null");
        }
        this.getHibernateTemplate().update(user);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#update(java.util.Collection)
     */
    public void update(final java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "User.update - 'entities' can not be null");
        }
        this.getHibernateTemplate().execute(
            new org.springframework.orm.hibernate3.HibernateCallback()
            {
                public java.lang.Object doInHibernate(org.hibernate.Session session)
                    throws org.hibernate.HibernateException
                {
                    for (java.util.Iterator entityIterator = entities.iterator(); entityIterator.hasNext();)
                    {
                        update((cn.edu.uestc.appstore.domain.User)entityIterator.next());
                    }
                    return null;
                }
            },
            true);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#remove(cn.edu.uestc.appstore.domain.User)
     */
    public void remove(cn.edu.uestc.appstore.domain.User user)
    {
        if (user == null)
        {
            throw new IllegalArgumentException(
                "User.remove - 'user' can not be null");
        }
        this.getHibernateTemplate().delete(user);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#remove(java.lang.Long)
     */
    public void remove(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "User.remove - 'id' can not be null");
        }
        cn.edu.uestc.appstore.domain.User entity = this.load(id);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#remove(java.util.Collection)
     */
    public void remove(java.util.Collection entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "User.remove - 'entities' can not be null");
        }
        this.getHibernateTemplate().deleteAll(entities);
    }
    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#findByUsername(java.lang.String)
     */
    public cn.edu.uestc.appstore.domain.User findByUsername(java.lang.String username)
    {
        return (cn.edu.uestc.appstore.domain.User)this.findByUsername(TRANSFORM_NONE, username);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#findByUsername(int, java.lang.String)
     */
    public java.lang.Object findByUsername(final int transform, final java.lang.String username)
    {
        return this.findByUsername(transform, "from cn.edu.uestc.appstore.domain.User as user where user.username = :username", username);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#findByUsername(java.lang.String, java.lang.String)
     */
    public cn.edu.uestc.appstore.domain.User findByUsername(final java.lang.String queryString, final java.lang.String username)
    {
        return (cn.edu.uestc.appstore.domain.User)this.findByUsername(TRANSFORM_NONE, queryString, username);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#findByUsername(int, java.lang.String, java.lang.String)
     */
    public java.lang.Object findByUsername(final int transform, final java.lang.String queryString, final java.lang.String username)
    {
        try
        {
            org.hibernate.Query queryObject = super.getSession(false).createQuery(queryString);
            queryObject.setParameter("username", username);
            java.util.Set results = new java.util.LinkedHashSet(queryObject.list());
            java.lang.Object result = null;
            if (results != null)
            {
                if (results.size() > 1)
                {
                    throw new org.springframework.dao.InvalidDataAccessResourceUsageException(
                        "More than one instance of 'cn.edu.uestc.appstore.domain.User"
                            + "' was found when executing query --> '" + queryString + "'");
                }
                else if (results.size() == 1)
                {
                    result = results.iterator().next();
                }
            }
            result = transformEntity(transform, (cn.edu.uestc.appstore.domain.User)result);
            return result;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>cn.edu.uestc.appstore.domain.UserDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     * <p>
     * This method will return instances of these types:
     * <ul>
     *   <li>{@link cn.edu.uestc.appstore.domain.User} - {@link #TRANSFORM_NONE}</li>
     *   <li>{@link cn.edu.uestc.appstore.vo.UserVO} - {@link TRANSFORM_USERVO}</li>
     * </ul>
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link cn.edu.uestc.appstore.domain.UserDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see #transformEntities(int,java.util.Collection)
     */
    protected java.lang.Object transformEntity(final int transform, final cn.edu.uestc.appstore.domain.User entity)
    {
        java.lang.Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case TRANSFORM_USERVO :
                    target = toUserVO(entity);
                    break;
                case TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * Transforms a collection of entities using the
     * {@link #transformEntity(int,cn.edu.uestc.appstore.domain.User)}
     * method. This method does not instantiate a new collection.
     * <p>
     * This method is to be used internally only.
     *
     * @param transform one of the constants declared in <code>cn.edu.uestc.appstore.domain.UserDao</code>
     * @param entities the collection of entities to transform
     * @see #transformEntity(int,cn.edu.uestc.appstore.domain.User)
     */
    protected void transformEntities(final int transform, final java.util.Collection entities)
    {
        switch (transform)
        {
            case TRANSFORM_USERVO :
                toUserVOCollection(entities);
                break;
            case TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#toEntities(java.util.Collection)
     */
    public void toEntities(final java.util.Collection results)
    {
        if (results != null)
        {
            org.apache.commons.collections.CollectionUtils.transform(results, ENTITYTRANSFORMER);
        }
    }

    /**
     * This anonymous transformer is designed to transform report query results
     * (which result in an array of entities) to {@link cn.edu.uestc.appstore.domain.User}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private org.apache.commons.collections.Transformer ENTITYTRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public java.lang.Object transform(java.lang.Object input)
            {
                java.lang.Object result = null;
                if (input instanceof java.lang.Object[])
                {
                    result = toEntity((java.lang.Object[])input);
                }
                else if (input instanceof cn.edu.uestc.appstore.domain.User)
                {
                    result = input;
                }
                return result;
            }
        };

    protected cn.edu.uestc.appstore.domain.User toEntity(java.lang.Object[] row)
    {
        cn.edu.uestc.appstore.domain.User target = null;
        if (row != null)
        {
            final int numberOfObjects = row.length;
            for (int ctr = 0; ctr < numberOfObjects; ctr++)
            {
                final java.lang.Object object = row[ctr];
                if (object instanceof cn.edu.uestc.appstore.domain.User)
                {
                    target = (cn.edu.uestc.appstore.domain.User)object;
                    break;
                }
            }
        }
        return target;
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#toUserVOCollection(java.util.Collection)
     */
    public final void toUserVOCollection(java.util.Collection entities)
    {
        if (entities != null)
        {
            org.apache.commons.collections.CollectionUtils.transform(entities, USERVO_TRANSFORMER);
        }
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#toUserVOArray(java.util.Collection)
     */
    public final cn.edu.uestc.appstore.vo.UserVO[] toUserVOArray(java.util.Collection entities)
    {
        cn.edu.uestc.appstore.vo.UserVO[] result = null;
        if (entities != null)
        {
            final java.util.Collection collection = new java.util.ArrayList(entities);
            this.toUserVOCollection(collection);
            result = (cn.edu.uestc.appstore.vo.UserVO[]) collection.toArray(new cn.edu.uestc.appstore.vo.UserVO[0]);
        }
        return result;
    }

    /**
     * Default implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link UserDaoImpl} class if you intend to use reporting queries.
     * @see cn.edu.uestc.appstore.domain.UserDao#toUserVO(cn.edu.uestc.appstore.domain.User)
     */
    protected cn.edu.uestc.appstore.vo.UserVO toUserVO(java.lang.Object[] row)
    {
        return this.toUserVO(this.toEntity(row));
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link cn.edu.uestc.appstore.vo.UserVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private org.apache.commons.collections.Transformer USERVO_TRANSFORMER =
        new org.apache.commons.collections.Transformer()
        {
            public java.lang.Object transform(java.lang.Object input)
            {
                java.lang.Object result = null;
                if (input instanceof cn.edu.uestc.appstore.domain.User)
                {
                    result = toUserVO((cn.edu.uestc.appstore.domain.User)input);
                }
                else if (input instanceof java.lang.Object[])
                {
                    result = toUserVO((java.lang.Object[])input);
                }
                return result;
            }
        };

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#userVOToEntityCollection(java.util.Collection)
     */
    public final void userVOToEntityCollection(java.util.Collection instances)
    {
        if (instances != null)
        {
            for (final java.util.Iterator iterator = instances.iterator(); iterator.hasNext();)
            {
                // - remove an objects that are null or not of the correct instance
                if (!(iterator.next() instanceof cn.edu.uestc.appstore.vo.UserVO))
                {
                    iterator.remove();
                }
            }
            org.apache.commons.collections.CollectionUtils.transform(instances, UserVOToEntityTransformer);
        }
    }

    private final org.apache.commons.collections.Transformer UserVOToEntityTransformer =
        new org.apache.commons.collections.Transformer()
        {
            public java.lang.Object transform(java.lang.Object input)
            {
                return userVOToEntity((cn.edu.uestc.appstore.vo.UserVO)input);
            }
        };


    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#toUserVO(cn.edu.uestc.appstore.domain.User, cn.edu.uestc.appstore.vo.UserVO)
     */
    public void toUserVO(
        cn.edu.uestc.appstore.domain.User source,
        cn.edu.uestc.appstore.vo.UserVO target)
    {
        target.setUsername(source.getUsername());
        target.setPassword(source.getPassword());
        target.setRealName(source.getRealName());
        target.setEmail(source.getEmail());
        target.setPhone(source.getPhone());
        target.setAddress(source.getAddress());
        target.setDescription(source.getDescription());
        target.setPicture(source.getPicture());
        target.setQuestion(source.getQuestion());
        target.setAnswer(source.getAnswer());
        target.setPoint(source.getPoint());
        target.setIsActive(source.getIsActive());
        target.setMemo(source.getMemo());
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#toUserVO(cn.edu.uestc.appstore.domain.User)
     */
    public cn.edu.uestc.appstore.vo.UserVO toUserVO(final cn.edu.uestc.appstore.domain.User entity)
    {
        cn.edu.uestc.appstore.vo.UserVO target = null;
        if (entity != null)
        {
            target = new cn.edu.uestc.appstore.vo.UserVO();
            this.toUserVO(entity, target);
        }
        return target;
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#userVOToEntity(cn.edu.uestc.appstore.vo.UserVO, cn.edu.uestc.appstore.domain.User)
     */
    public void userVOToEntity(
        cn.edu.uestc.appstore.vo.UserVO source,
        cn.edu.uestc.appstore.domain.User target,
        boolean copyIfNull)
    {
        if (copyIfNull || source.getUsername() != null)
        {
            target.setUsername(source.getUsername());
        }
        if (copyIfNull || source.getPassword() != null)
        {
            target.setPassword(source.getPassword());
        }
        if (copyIfNull || source.getRealName() != null)
        {
            target.setRealName(source.getRealName());
        }
        if (copyIfNull || source.getEmail() != null)
        {
            target.setEmail(source.getEmail());
        }
        if (copyIfNull || source.getPhone() != null)
        {
            target.setPhone(source.getPhone());
        }
        if (copyIfNull || source.getAddress() != null)
        {
            target.setAddress(source.getAddress());
        }
        if (copyIfNull || source.getDescription() != null)
        {
            target.setDescription(source.getDescription());
        }
        if (copyIfNull || source.getPicture() != null)
        {
            target.setPicture(source.getPicture());
        }
        if (copyIfNull || source.getQuestion() != null)
        {
            target.setQuestion(source.getQuestion());
        }
        if (copyIfNull || source.getAnswer() != null)
        {
            target.setAnswer(source.getAnswer());
        }
        if (copyIfNull || source.getPoint() != null)
        {
            target.setPoint(source.getPoint());
        }
        if (copyIfNull || source.getIsActive() != null)
        {
            target.setIsActive(source.getIsActive());
        }
        if (copyIfNull || source.getMemo() != null)
        {
            target.setMemo(source.getMemo());
        }
    }

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return cn.edu.uestc.appstore.PrincipalStore.get();
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#search(int, int, int, cn.edu.uestc.appstore.Search)
     */
    public cn.edu.uestc.appstore.PaginationResult search(final int transform, final int pageNumber, final int pageSize, final cn.edu.uestc.appstore.Search search)
    {
        try
        {
            search.setPageNumber(pageNumber);
            search.setPageSize(pageSize);
            final cn.edu.uestc.appstore.PropertySearch propertySearch = new cn.edu.uestc.appstore.PropertySearch(
                this.getSession(false), cn.edu.uestc.appstore.domain.UserImpl.class, search);
            final java.util.List results = propertySearch.executeAsList();
            this.transformEntities(transform, results);
            return new cn.edu.uestc.appstore.PaginationResult(results.toArray(new java.lang.Object[0]), propertySearch.getTotalCount());
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#search(int, int, cn.edu.uestc.appstore.Search)
     */
    public cn.edu.uestc.appstore.PaginationResult search(final int pageNumber, final int pageSize, final cn.edu.uestc.appstore.Search search)
    {
        return this.search(TRANSFORM_NONE, pageNumber, pageSize, search);
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#search(int, cn.edu.uestc.appstore.Search)
     */
    public java.util.Set search(final int transform, final cn.edu.uestc.appstore.Search search)
    {
        try
        {
            final cn.edu.uestc.appstore.PropertySearch propertySearch = new cn.edu.uestc.appstore.PropertySearch(
                this.getSession(false), cn.edu.uestc.appstore.domain.UserImpl.class, search);
            final java.util.Set results = propertySearch.executeAsSet();
            this.transformEntities(transform, results);
            return results;
        }
        catch (org.hibernate.HibernateException ex)
        {
            throw super.convertHibernateAccessException(ex);
        }
    }

    /**
     * @see cn.edu.uestc.appstore.domain.UserDao#search(cn.edu.uestc.appstore.Search)
     */
    public java.util.Set search(final cn.edu.uestc.appstore.Search search)
    {
        return this.search(TRANSFORM_NONE, search);
    }

    // spring-hibernate-dao-base merge-point
}