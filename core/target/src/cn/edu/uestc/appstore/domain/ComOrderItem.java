// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package cn.edu.uestc.appstore.domain;

/**
 * 
 */
public abstract class ComOrderItem
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = 6117835640477324031L;

    private java.lang.Integer count;

    /**
     * 
     */
    public java.lang.Integer getCount()
    {
        return this.count;
    }

    public void setCount(java.lang.Integer count)
    {
        this.count = count;
    }

    private java.lang.Float price;

    /**
     * 
     */
    public java.lang.Float getPrice()
    {
        return this.price;
    }

    public void setPrice(java.lang.Float price)
    {
        this.price = price;
    }

    private java.lang.String memo;

    /**
     * 
     */
    public java.lang.String getMemo()
    {
        return this.memo;
    }

    public void setMemo(java.lang.String memo)
    {
        this.memo = memo;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private cn.edu.uestc.appstore.domain.Commodity commodity;

    /**
     * 
     */
    public cn.edu.uestc.appstore.domain.Commodity getCommodity()
    {
        return this.commodity;
    }

    public void setCommodity(cn.edu.uestc.appstore.domain.Commodity commodity)
    {
        this.commodity = commodity;
    }

    private cn.edu.uestc.appstore.domain.ComOrder comOrder;

    /**
     * 
     */
    public cn.edu.uestc.appstore.domain.ComOrder getComOrder()
    {
        return this.comOrder;
    }

    public void setComOrder(cn.edu.uestc.appstore.domain.ComOrder comOrder)
    {
        this.comOrder = comOrder;
    }

    /**
     * Returns <code>true</code> if the argument is an ComOrderItem instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof ComOrderItem))
        {
            return false;
        }
        final ComOrderItem that = (ComOrderItem)object;
        if (this.id == null || that.getId() == null || !this.id.equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (id == null ? 0 : id.hashCode());

        return hashCode;
    }

    /**
     * Constructs new instances of {@link cn.edu.uestc.appstore.domain.ComOrderItem}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link cn.edu.uestc.appstore.domain.ComOrderItem}.
         */
        public static cn.edu.uestc.appstore.domain.ComOrderItem newInstance()
        {
            return new cn.edu.uestc.appstore.domain.ComOrderItemImpl();
        }

        /**
         * Constructs a new instance of {@link cn.edu.uestc.appstore.domain.ComOrderItem}, taking all required and/or
         * read-only properties as arguments.
         */
        public static cn.edu.uestc.appstore.domain.ComOrderItem newInstance(java.lang.Integer count, java.lang.Float price, cn.edu.uestc.appstore.domain.Commodity commodity, cn.edu.uestc.appstore.domain.ComOrder comOrder)
        {
            final cn.edu.uestc.appstore.domain.ComOrderItem entity = new cn.edu.uestc.appstore.domain.ComOrderItemImpl();
            entity.setCount(count);
            entity.setPrice(price);
            entity.setCommodity(commodity);
            entity.setComOrder(comOrder);
            return entity;
        }

        /**
         * Constructs a new instance of {@link cn.edu.uestc.appstore.domain.ComOrderItem}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static cn.edu.uestc.appstore.domain.ComOrderItem newInstance(java.lang.Integer count, java.lang.Float price, java.lang.String memo, cn.edu.uestc.appstore.domain.Commodity commodity, cn.edu.uestc.appstore.domain.ComOrder comOrder)
        {
            final cn.edu.uestc.appstore.domain.ComOrderItem entity = new cn.edu.uestc.appstore.domain.ComOrderItemImpl();
            entity.setCount(count);
            entity.setPrice(price);
            entity.setMemo(memo);
            entity.setCommodity(commodity);
            entity.setComOrder(comOrder);
            return entity;
        }
    }
    
// HibernateEntity.vsl merge-point
}