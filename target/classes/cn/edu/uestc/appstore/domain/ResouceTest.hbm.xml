<?xml version="1.0" encoding="UTF-8"?>
<!--
     Attention: Generated code! Do not modify by hand!
     Generated by: hibernate.hbm.xml.vsl in andromda-hibernate-cartridge.
  -->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="cn.edu.uestc.appstore.domain.ResouceTestImpl" table="RESOUCE_TEST" dynamic-insert="false" dynamic-update="false">
        <id name="id" type="java.lang.Long" unsaved-value="null">
            <column name="ID" sql-type="BIGINT"/>
            <generator class="native">
            </generator>
        </id>
        <property name="description" type="java.lang.String">
            <column name="DESCRIPTION" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="beginTime" type="java.util.Date">
            <column name="BEGIN_TIME" not-null="false" unique="false" sql-type="DATETIME"/>
        </property>
        <property name="endTime" type="java.util.Date">
            <column name="END_TIME" not-null="false" unique="false" sql-type="DATETIME"/>
        </property>
        <property name="reportURL" type="java.lang.String">
            <column name="REPORT_U_R_L" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="review" type="java.lang.String">
            <column name="REVIEW" not-null="false" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <property name="mark" type="java.lang.Integer">
            <column name="MARK" not-null="true" unique="false" sql-type="INTEGER"/>
        </property>
        <property name="result" type="java.lang.String">
            <column name="RESULT" not-null="true" unique="false" sql-type="VARCHAR(255) BINARY"/>
        </property>
        <many-to-one name="resouce" class="cn.edu.uestc.appstore.domain.ResouceImpl" foreign-key="RESOUCE_TEST_RESOUCE_FKC" not-null="true" lazy="proxy" fetch="select">
            <column name="RESOUCE_FK" not-null="true" sql-type="BIGINT"/>
        </many-to-one>
    </class>
</hibernate-mapping>